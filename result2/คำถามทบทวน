1. Multiple Source Files: เหตุใดต้องแยก source code เป็นหลายไฟล์?
เพราะช่วยให้โค้ดเป็นระเบียบ อ่านง่าย แยกหน้าที่ของแต่ละส่วนได้ชัดเจน และช่วยให้การพัฒนาและแก้ไขบั๊กทำได้ง่ายขึ้น รวมถึงสนับสนุนการทำงานแบบทีมได้ดีขึ้น

2. CMakeLists.txt Management: การเพิ่มไฟล์ source ใหม่ต้องแก้ไขอะไรบ้าง?
ต้องเพิ่มชื่อไฟล์ source code ที่สร้างใหม่ลงในส่วน SRCS ของไฟล์ CMakeLists.txt เพื่อให้ระบบ build รู้จักและรวมไฟล์เหล่านั้นในการคอมไพล์

3. Header Files: บทบาทของไฟล์ .h คืออะไร และทำไมต้องมี?
ไฟล์ header (.h) เป็นที่ประกาศฟังก์ชันและตัวแปรที่ใช้ข้ามไฟล์ source ช่วยให้ไฟล์อื่นๆ รู้จัก interface ของโมดูลนั้นๆ โดยไม่ต้องเห็นรายละเอียดในไฟล์ .c

4. Include Directories: เหตุใด CMakeLists.txt ต้องระบุ INCLUDE_DIRS?
เพื่อบอกระบบ build ว่าต้องค้นหาไฟล์ header ในโฟลเดอร์ไหน ทำให้เวลาคอมไพล์ไฟล์ .c จะสามารถเจอและ include ไฟล์ header ได้ถูกต้อง

5. Git Ignore: ไฟล์ .gitignore ช่วยอะไรในการจัดการ ESP32 project?
ช่วยบอก git ว่าไฟล์หรือโฟลเดอร์ไหนไม่ควรนำขึ้นไปเก็บใน repository เช่น ไฟล์ build, ไฟล์ชั่วคราว หรือตัวตั้งค่าที่ไม่จำเป็น เพื่อให้ repo สะอาดและลดขนาด

6. Task Management: การใช้ FreeRTOS task ในโมดูล LED ช่วยอะไร?
ช่วยให้ LED กะพริบหรือทำงานแบบขนานกับงานอื่นๆ ในโปรแกรมได้ โดยไม่บล็อกการทำงานของฟังก์ชันหลัก ทำให้ระบบมีประสิทธิภาพและตอบสนองได้ดีขึ้น

7. Code Organization: ข้อดีของการแยกโมดูล sensor, display, led เป็นไฟล์แยกคืออะไร?
ทำให้โค้ดแต่ละโมดูลมีความรับผิดชอบชัดเจน สามารถพัฒนา ทดสอบ และแก้ไขแยกกันได้ ลดความซับซ้อน และช่วยให้โค้ดง่ายต่อการบำรุงรักษา

